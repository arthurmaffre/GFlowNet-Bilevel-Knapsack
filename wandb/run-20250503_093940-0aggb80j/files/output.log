🚀 Starting training on device: mps for 50 epochs
Training: 100%|█████████████████████████████████████| 50/50 [00:04<00:00, 10.90epoch/s, batch_max_reward=444, best_reward=506, loss=1.12]


🏁 Training finished
✨ Best reward: 505.73046875
🧩 Best sequence: [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0]
-------------
505.73046875
505.73047
275.0
275.0
-------------
[1 1 1 0 1 1 1 0 0 0 1 0 1 0 0]
[0. 1. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 1. 1. 1.]
-------------
[0.         7.8984375  0.         8.3359375  9.9453125  6.3125
 7.16015625 8.0546875  9.765625   7.921875   6.9765625  8.7421875
 6.9765625  6.1953125  8.953125  ]
[74. 93. 27. 25. 99. 25. 51. 51. 83. 18. 88. 10. 94. 25. 40.]
Iteration 1 → Master: 275.000000, Follower(seq): 505.730469, Gap: +230.730469
→ Adding new constraint from follower.
🚀 Starting training on device: mps for 50 epochs
Training:  24%|████████▉                            | 12/50 [00:00<00:03, 12.64epoch/s, batch_max_reward=464, best_reward=538, loss=1.18]
Traceback (most recent call last):
  File "/Users/arthur/Library/Mobile Documents/com~apple~CloudDocs/Cours/ECN6338/Devoir à rendre/projet Avec critique/train.py", line 351, in <module>
    master_val, follower_val, iteration, start_time = solve(u_vals, t_vals, B_val, cfg)
                                                      ~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/arthur/Library/Mobile Documents/com~apple~CloudDocs/Cours/ECN6338/Devoir à rendre/projet Avec critique/train.py", line 157, in solve
    follower_val_t, x_hat_sol = train_model(u_vals=u, t_vals=t_sol, B_val=B, epochs=cfg.num_epochs, batch_size=batch_size, actor=actor, critic=critic, optimizer_ac=optimizer_ac, optimizer_cr=optimizer_cr, device=device)
                                ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/arthur/Library/Mobile Documents/com~apple~CloudDocs/Cours/ECN6338/Devoir à rendre/projet Avec critique/train.py", line 253, in train_model
    logp_cand, selected_cand = actor.generate_trajectories(
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        B_tensor.expand(batch_size, 1),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        device,
        ^^^^^^^
    )
    ^
  File "/Users/arthur/Library/Mobile Documents/com~apple~CloudDocs/Cours/ECN6338/Devoir à rendre/projet Avec critique/models/GFlowNet_v1.py", line 82, in generate_trajectories
    h = layer(h)
  File "/Users/arthur/miniconda3/envs/GFlowNet-Knapsack-Actor-Critic/lib/python3.13/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/arthur/miniconda3/envs/GFlowNet-Knapsack-Actor-Critic/lib/python3.13/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/arthur/miniconda3/envs/GFlowNet-Knapsack-Actor-Critic/lib/python3.13/site-packages/torch/nn/modules/normalization.py", line 217, in forward
    return F.layer_norm(
           ~~~~~~~~~~~~^
        input, self.normalized_shape, self.weight, self.bias, self.eps
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/arthur/miniconda3/envs/GFlowNet-Knapsack-Actor-Critic/lib/python3.13/site-packages/torch/nn/functional.py", line 2910, in layer_norm
    return torch.layer_norm(
           ~~~~~~~~~~~~~~~~^
        input, normalized_shape, weight, bias, eps, torch.backends.cudnn.enabled
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
KeyboardInterrupt
