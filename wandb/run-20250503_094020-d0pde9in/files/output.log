ðŸš€ Starting training on device: mps for 50 epochs
Training:  34%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ                        | 17/50 [00:01<00:03,  9.33epoch/s, batch_max_reward=424, best_reward=516, loss=1.07]
Traceback (most recent call last):
  File "/Users/arthur/Library/Mobile Documents/com~apple~CloudDocs/Cours/ECN6338/Devoir Ã  rendre/projet Avec critique/train.py", line 351, in <module>
    master_val, follower_val, iteration, start_time = solve(u_vals, t_vals, B_val, cfg)
                                                      ~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/arthur/Library/Mobile Documents/com~apple~CloudDocs/Cours/ECN6338/Devoir Ã  rendre/projet Avec critique/train.py", line 157, in solve
    follower_val_t, x_hat_sol = train_model(u_vals=u, t_vals=t_sol, B_val=B, epochs=cfg.num_epochs, batch_size=batch_size, actor=actor, critic=critic, optimizer_ac=optimizer_ac, optimizer_cr=optimizer_cr, device=device)
                                ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/arthur/Library/Mobile Documents/com~apple~CloudDocs/Cours/ECN6338/Devoir Ã  rendre/projet Avec critique/train.py", line 253, in train_model
    logp_cand, selected_cand = actor.generate_trajectories(
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        B_tensor.expand(batch_size, 1),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        device,
        ^^^^^^^
    )
    ^
  File "/Users/arthur/Library/Mobile Documents/com~apple~CloudDocs/Cours/ECN6338/Devoir aÌ€ rendre/projet Avec critique/models/GFlowNet_v1.py", line 82, in generate_trajectories
    h = layer(h)
  File "/Users/arthur/miniconda3/envs/envexport/lib/python3.13/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/arthur/miniconda3/envs/envexport/lib/python3.13/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/arthur/miniconda3/envs/envexport/lib/python3.13/site-packages/torch/nn/modules/normalization.py", line 217, in forward
    return F.layer_norm(
           ~~~~~~~~~~~~^
        input, self.normalized_shape, self.weight, self.bias, self.eps
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/arthur/miniconda3/envs/envexport/lib/python3.13/site-packages/torch/nn/functional.py", line 2910, in layer_norm
    return torch.layer_norm(
           ~~~~~~~~~~~~~~~~^
        input, normalized_shape, weight, bias, eps, torch.backends.cudnn.enabled
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
KeyboardInterrupt
Exception ignored in atexit callback <function _start_and_connect_service.<locals>.teardown_atexit at 0x109f0a700>:
Traceback (most recent call last):
  File "/Users/arthur/miniconda3/envs/envexport/lib/python3.13/site-packages/wandb/sdk/lib/service_connection.py", line 94, in teardown_atexit
    conn.teardown(hooks.exit_code)
  File "/Users/arthur/miniconda3/envs/envexport/lib/python3.13/site-packages/wandb/sdk/lib/service_connection.py", line 226, in teardown
    self._router.join()
  File "/Users/arthur/miniconda3/envs/envexport/lib/python3.13/site-packages/wandb/sdk/interface/router.py", line 75, in join
    self._thread.join()
  File "/Users/arthur/miniconda3/envs/envexport/lib/python3.13/threading.py", line 1092, in join
    self._handle.join(timeout)
KeyboardInterrupt:
